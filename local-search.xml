<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>FFmpeg常用指令</title>
    <link href="/2023/09-04-ffmpegzhiling.html"/>
    <url>/2023/09-04-ffmpegzhiling.html</url>
    
    <content type="html"><![CDATA[<h3 id="FFmpeg常见的音视频指令"><a href="#FFmpeg常见的音视频指令" class="headerlink" title="FFmpeg常见的音视频指令"></a><strong>FFmpeg常见的音视频指令</strong></h3><h5 id="提取视频中的音频为mp3"><a href="#提取视频中的音频为mp3" class="headerlink" title="提取视频中的音频为mp3"></a><strong>提取视频中的音频为mp3</strong></h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i <span class="hljs-number">123</span>.mp4 -vn <span class="hljs-number">123</span>.mp<br></code></pre></td></tr></table></figure><p>#提取当前目录下的123.MP4视频中的音频为123.MP3保存到当前目录</p><h5 id="音频中加入背景音频"><a href="#音频中加入背景音频" class="headerlink" title="音频中加入背景音频"></a><strong>音频中加入背景音频</strong></h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i <span class="hljs-number">1</span>.mp3 -i <span class="hljs-number">2</span>.mp3 -filter_complex amix=inputs=<span class="hljs-number">2</span>:duration=longest:dropout_transition=<span class="hljs-number">3</span> <span class="hljs-number">3</span>.mp3<br></code></pre></td></tr></table></figure><p>#1.mp3为主音频 2.mp3为背景音 3.mp3为输出的音频</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">ffmpeg -i 1.mp3 -i 2.mp3 -filter_complex <span class="hljs-string">&quot;<span class="hljs-subst">[0:a]</span>volume=1<span class="hljs-subst">[a1]</span>;<span class="hljs-subst">[1:a]</span>volume=0.5<span class="hljs-subst">[a2]</span>;<span class="hljs-subst">[a1]</span><span class="hljs-subst">[a2]</span>amix=inputs=2:duration=longest:dropout_transition=2<span class="hljs-subst">[a]</span>&quot;</span> -map <span class="hljs-string">&quot;<span class="hljs-subst">[a]</span>&quot;</span> -b:a 192k output.mp3<br></code></pre></td></tr></table></figure><p>#增加单独设置每个音频的音量指定192k比特率</p><h5 id="提取视频字幕"><a href="#提取视频字幕" class="headerlink" title="提取视频字幕"></a><strong>提取视频字幕</strong></h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i <span class="hljs-number">001</span>.mp4 -map <span class="hljs-number">0</span>:s:<span class="hljs-number">0</span> sub1.srt<br></code></pre></td></tr></table></figure><p>#这将下载第一个字幕轨。如果有几个，使用0:s:1下载第二个，0:s:2下载第三个，等等。字幕格式是srt或者ass修改后缀名就可以了</p><h5 id="屏蔽视频内封的字幕"><a href="#屏蔽视频内封的字幕" class="headerlink" title="屏蔽视频内封的字幕"></a><strong>屏蔽视频内封的字幕</strong></h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-class">.mp4</span> -c copy -sn output.mp4<br></code></pre></td></tr></table></figure><p>这个命令会将输入文件input.mp4复制到输出文件output.mp4，并且不会包含字幕。 -c copy选项意味着视频和音频流会被直接拷贝而非重新编码，这样速度更快、质量更好</p><h5 id="视频添加字幕"><a href="#视频添加字幕" class="headerlink" title="视频添加字幕"></a><strong>视频添加字幕</strong></h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> <span class="hljs-number">1</span><span class="hljs-selector-class">.mp4</span> -<span class="hljs-selector-tag">i</span> <span class="hljs-number">1</span><span class="hljs-selector-class">.srt</span> -c copy -c:s mov_text new.mp4<br></code></pre></td></tr></table></figure><p>以上是将字幕文件作为单独流添加进视频（内封）</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-class">.mp4</span> -vf <span class="hljs-string">&quot;ass=input.ass&quot;</span> -y output.mp4<br></code></pre></td></tr></table></figure><p>以上是将字幕文件烧录进视频中（内嵌）</p><p>以下为烧录进视频命令</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-class">.mp4</span> -vf <span class="hljs-string">&quot;subtitles=input.srt:force_style=&#x27;FontName=Arial,FontSize=20&#x27;&quot;</span> output.mp4<br></code></pre></td></tr></table></figure><p>以上是可以指定字体样式跟大小</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> mymovie<span class="hljs-selector-class">.mp4</span> -vf subtitles=subtitles<span class="hljs-selector-class">.srt</span> mysubtitledmovie.mp4<br></code></pre></td></tr></table></figure><h5 id="视频剪辑"><a href="#视频剪辑" class="headerlink" title="视频剪辑"></a><strong>视频剪辑</strong></h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -ss <span class="hljs-number">0</span>:<span class="hljs-number">26</span>:<span class="hljs-number">07</span> -t <span class="hljs-number">00</span>:<span class="hljs-number">01</span>:<span class="hljs-number">00</span> -i <span class="hljs-number">35</span>.mp4 -vcodec copy -acodec copy <span class="hljs-number">56</span>.mp4<br></code></pre></td></tr></table></figure><p>#剪辑视频  ss 开始时间， -t 持续时间</p><h5 id="合并视频"><a href="#合并视频" class="headerlink" title="合并视频"></a><strong>合并视频</strong></h5><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">ffmpeg -i 55.mp4 -i 56.mp4 -filter_complex <span class="hljs-string">&quot;<span class="hljs-subst">[0:v:0]</span> <span class="hljs-subst">[0:a:0]</span> <span class="hljs-subst">[1:v:0]</span> <span class="hljs-subst">[1:a:0]</span> concat=n=2:v=1:a=1 <span class="hljs-subst">[v]</span> <span class="hljs-subst">[a]</span>&quot;</span> -map <span class="hljs-string">&quot;<span class="hljs-subst">[v]</span>&quot;</span> -map <span class="hljs-string">&quot;<span class="hljs-subst">[a]</span>&quot;</span> output.mp4<br></code></pre></td></tr></table></figure><h5 id="设置图片为视频封面"><a href="#设置图片为视频封面" class="headerlink" title="设置图片为视频封面"></a><strong>设置图片为视频封面</strong></h5><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i <span class="hljs-number">2</span>.mp4 -i fm.png -map <span class="hljs-number">0</span> -map <span class="hljs-number">1</span> -c copy -c:v:<span class="hljs-number">1</span> png -disposition:v:<span class="hljs-number">1</span> attached_pic output_video.mp4<br></code></pre></td></tr></table></figure><h5 id="mp4格式转flv格式"><a href="#mp4格式转flv格式" class="headerlink" title="mp4格式转flv格式"></a><strong>mp4格式转flv格式</strong></h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">ffmpeg <span class="hljs-literal">-i</span> <span class="hljs-number">1</span>.mp4 <span class="hljs-literal">-acodec</span> <span class="hljs-built_in">copy</span> <span class="hljs-literal">-vcodec</span> <span class="hljs-built_in">copy</span> <span class="hljs-operator">-f</span> flv test.flv<br></code></pre></td></tr></table></figure><p>#mp4视频转换为flv格式</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-class">.flv</span> -qscale <span class="hljs-number">0</span> output.mp4<br></code></pre></td></tr></table></figure><p>转换时保持源视频质量</p><h5 id="音频混合到视频中"><a href="#音频混合到视频中" class="headerlink" title="音频混合到视频中"></a><strong>音频混合到视频中</strong></h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> <span class="hljs-number">22</span><span class="hljs-selector-class">.mp3</span> -<span class="hljs-selector-tag">i</span> <span class="hljs-number">1</span><span class="hljs-selector-class">.mp4</span> <span class="hljs-number">22</span>.mp4<br></code></pre></td></tr></table></figure><p>#把22.mp3跟1.mp4 混合在一起并导出为22.mp4</p><h5 id="添加文字水印"><a href="#添加文字水印" class="headerlink" title="添加文字水印"></a><strong>添加文字水印</strong></h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> <span class="hljs-number">1</span><span class="hljs-selector-class">.mp4</span> -vf <span class="hljs-string">&quot;drawtext=fontsize=50:fontfile=msyh.ttc:text=&#x27;公众号：海豚学长&#x27;:x=500:y=800:fontcolor=white:enable=lt(mod(t\, 20)\, 1)&quot;</span>  out.mp4<br></code></pre></td></tr></table></figure><p>#视频添加文字水印，需要把系统支持中文的字体文件复制到当前目录下，enable&#x3D;lt(mod(t, 20), 1)这个表示每20秒显示1次水印</p><h5 id="添加当前系统时间作为文字水印"><a href="#添加当前系统时间作为文字水印" class="headerlink" title="添加当前系统时间作为文字水印"></a><strong>添加当前系统时间作为文字水印</strong></h5><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">ffmpeg -i <span class="hljs-number">22</span>.mp4 -vf <span class="hljs-string">&quot;drawtext=fontsize=60:fontfile=msyh.ttc:text=&#x27;%&#123;localtime\:%Y\-%m\-%d %H-%M-%S&#125;&#x27;:fontcolor=black:box=1:boxcolor=yellow:x=10:y=10:alpha=0.5&quot;</span> <span class="hljs-number">222</span>.mp4 -<span class="hljs-keyword">y</span><br></code></pre></td></tr></table></figure><p>#fontcolor&#x3D;black 表示字体为黑色 box&#x3D;1 表示添加框 boxcolor&#x3D;yellow 表示框的背景色黄色 x&#x3D;10:y&#x3D;10 表示坐标地址 alpha&#x3D;0.5 透明度为50% </p><h5 id="添加图片水印"><a href="#添加图片水印" class="headerlink" title="添加图片水印"></a><strong>添加图片水印</strong></h5><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">ffmpeg -i 1.mp4 -vf <span class="hljs-string">&quot;movie=sy.png,scale=200:200<span class="hljs-subst">[wm]</span>; <span class="hljs-subst">[in]</span> <span class="hljs-subst">[wm]</span> overlay=main_w-overlay_w-10:main_h-overlay_h-10<span class="hljs-subst">[out]</span>&quot;</span> scale.mp4<br></code></pre></td></tr></table></figure><p>#scale&#x3D;200:200水印图片缩放至200*200并且在右下角显示</p><p>图片显示在视频中的位置说明</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs elixir">“overlay=<span class="hljs-number">10</span><span class="hljs-symbol">:main_h-overlay_h-</span><span class="hljs-number">10</span><span class="hljs-string">&quot;;  //左下</span><br><span class="hljs-string"></span><br><span class="hljs-string"> &quot;</span>overlay=main_w/<span class="hljs-number">2</span>-overlay_w/<span class="hljs-number">2</span><span class="hljs-symbol">:main_h-overlay_h-</span><span class="hljs-number">10</span><span class="hljs-string">&quot;; //正下</span><br><span class="hljs-string"></span><br><span class="hljs-string"> &quot;</span>overlay=main_w-overlay_w<span class="hljs-number">-10</span><span class="hljs-symbol">:main_h-overlay_h-</span><span class="hljs-number">10</span><span class="hljs-string">&quot;; //右下</span><br><span class="hljs-string"></span><br><span class="hljs-string"> &quot;</span>overlay=<span class="hljs-number">10</span><span class="hljs-symbol">:main_h/</span><span class="hljs-number">2</span>-overlay_h/<span class="hljs-number">2</span><span class="hljs-string">&quot;; //中左</span><br><span class="hljs-string"></span><br><span class="hljs-string"> &quot;</span>overlay=main_w/<span class="hljs-number">2</span>-overlay_w/<span class="hljs-number">2</span><span class="hljs-symbol">:main_h/</span><span class="hljs-number">2</span>-overlay_h/<span class="hljs-number">2</span><span class="hljs-string">&quot;; //正中</span><br><span class="hljs-string"></span><br><span class="hljs-string"> &quot;</span>overlay=main_w-overlay_w<span class="hljs-number">-10</span><span class="hljs-symbol">:main_h/</span><span class="hljs-number">2</span>-overlay_h/<span class="hljs-number">2</span><span class="hljs-string">&quot;; //中右</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;</span>overlay=<span class="hljs-number">10</span><span class="hljs-symbol">:</span><span class="hljs-number">10</span><span class="hljs-string">&quot;; //左上</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;</span>overlay=main_w/<span class="hljs-number">2</span>-overlay_w/<span class="hljs-number">2</span><span class="hljs-symbol">:</span><span class="hljs-number">10</span><span class="hljs-string">&quot;; //正上</span><br><span class="hljs-string"></span><br><span class="hljs-string"> &quot;</span>overlay=main_w-overlay_w<span class="hljs-number">-10</span><span class="hljs-symbol">:</span><span class="hljs-number">10</span><span class="hljs-string">&quot;; //右上</span><br></code></pre></td></tr></table></figure><h5 id="指定时间显示图片水印以及持续时间"><a href="#指定时间显示图片水印以及持续时间" class="headerlink" title="指定时间显示图片水印以及持续时间"></a><strong>指定时间显示图片水印以及持续时间</strong></h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ffmpeg -hide_banner -<span class="hljs-selector-tag">i</span> <span class="hljs-number">1</span><span class="hljs-selector-class">.mp4</span> -<span class="hljs-selector-tag">i</span> sy<span class="hljs-selector-class">.png</span> -filter_complex <span class="hljs-string">&quot;overlay=enable=&#x27;between(t,5,10)&#x27;&quot;</span> out<span class="hljs-selector-class">.mp4</span> -y<br></code></pre></td></tr></table></figure><p>上面的命令作用是：让水印在视频的5~10秒时间段内显示</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ffmpeg -hide_banner -<span class="hljs-selector-tag">i</span> <span class="hljs-number">2</span><span class="hljs-selector-class">.mp4</span> -<span class="hljs-selector-tag">i</span> F:\ffmpeg\sy<span class="hljs-selector-class">.png</span> -filter_complex <span class="hljs-string">&quot;overlay=&#x27;main_w-overlay_w-10:main_h-overlay_h-10&#x27;:enable=&#x27;between(t,5,10)&#x27;&quot;</span> out<span class="hljs-selector-class">.mp4</span> -y<br></code></pre></td></tr></table></figure><p>#上面的指令增加指定水印显示在视频中什么位置</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs maxima">ffmpeg -hide_banner -i <span class="hljs-number">1.</span>mkv -i F:\ffmpeg素材\sy.png -filter_complex [<span class="hljs-number">1</span>]<span class="hljs-built_in">scale</span>=<span class="hljs-number">200</span>:<span class="hljs-number">200</span>[wm];[<span class="hljs-number">0</span>][wm]<span class="hljs-string">&quot;overlay=&#x27;main_w-overlay_w-10:main_h-overlay_h-10&#x27;:enable=&#x27;between(t,25,35)&#x27;&quot;</span> **-b**:v <span class="hljs-number">2287</span>**k** -b:a 128k <span class="hljs-built_in">new</span>.mp4 <br><span class="hljs-built_in">draw</span>=lt(<span class="hljs-built_in">mod</span>(t\,<span class="hljs-number">3</span>)\,<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>#每3秒显示1秒</p><p>#加入了设置视频跟音频的比特率设定</p><p>#上面的指令增加图片缩放效果</p><h5 id="下载网页中的m3u8并转换为mp4格式"><a href="#下载网页中的m3u8并转换为mp4格式" class="headerlink" title="下载网页中的m3u8并转换为mp4格式"></a><strong>下载网页中的m3u8并转换为mp4格式</strong></h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ffmpeg -i http:<span class="hljs-regexp">//</span><span class="hljs-number">12571208</span>ud.com<span class="hljs-regexp">/0ef121cdvodtransgzp1257120875/</span><span class="hljs-number">3055695</span>e5285890780828799271/v.f230.m3u8 -c copy  your.mp4<br></code></pre></td></tr></table></figure><h5 id="裁剪视频"><a href="#裁剪视频" class="headerlink" title="裁剪视频"></a><strong>裁剪视频</strong></h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">ffmpeg -<span class="hljs-selector-tag">i</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-class">.mp4</span> -<span class="hljs-attribute">filter</span>:v <span class="hljs-string">&quot;crop=w:h:x:y&quot;</span> output.mp4<br></code></pre></td></tr></table></figure><p>-filter:v – 表示视频过滤器。</p><p>crop – 表示裁剪过滤器。</p><p>w – 我们想自源视频中裁剪的矩形的宽度。</p><p>h – 矩形的高度。</p><p>x – 我们想自源视频中裁剪的矩形的 x 坐标 。</p><p>y – 矩形的 y 坐标。</p><h5 id="添加视频封面图片"><a href="#添加视频封面图片" class="headerlink" title="添加视频封面图片"></a><strong>添加视频封面图片</strong></h5><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">ffmpeg -i <span class="hljs-number">1</span>.mp4 -i F:\ffmpeg\cover.png -<span class="hljs-keyword">map</span> <span class="hljs-number">0</span> -<span class="hljs-keyword">map</span> <span class="hljs-number">1</span> -<span class="hljs-keyword">c</span> <span class="hljs-keyword">copy</span> -<span class="hljs-keyword">c</span>:<span class="hljs-variable">v:1</span> png -disposition:<span class="hljs-variable">v:1</span> attached_pic -vcodec <span class="hljs-keyword">copy</span> -acodec <span class="hljs-keyword">copy</span> <span class="hljs-number">666</span>.mp4<br></code></pre></td></tr></table></figure><h5 id="批量添加视频封面图片"><a href="#批量添加视频封面图片" class="headerlink" title="批量添加视频封面图片"></a><strong>批量添加视频封面图片</strong></h5><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">for</span> %%<span class="hljs-keyword">a</span> in (<span class="hljs-string">&quot;*.mp4&quot;</span>) <span class="hljs-keyword">do</span> ffmpeg -i <span class="hljs-string">&quot;%%a&quot;</span> -i F:\ffmpeg\cover.png -<span class="hljs-keyword">map</span> <span class="hljs-number">0</span> -<span class="hljs-keyword">map</span> <span class="hljs-number">1</span> -<span class="hljs-keyword">c</span> <span class="hljs-keyword">copy</span> -<span class="hljs-keyword">c</span>:<span class="hljs-variable">v:1</span> png -disposition:<span class="hljs-variable">v:1</span> attached_pic <span class="hljs-string">&quot;new\%%~na.mp4&quot;</span><br></code></pre></td></tr></table></figure><p>pause</p><p>#新建文本文档复制粘贴上面指令并另存为.bat 批处理文件，(“*.mp4”)表示过滤当前文件夹内的mp4文件，”new%%~na.mp4”表示处理好的文件输出到当前目录下的new文件夹里面并以原来的文件名称命名 <strong>注意：添加视频封面需要最后才添加，不然先做视频封面再添加图片水印之类的，封面会消失</strong></p><h5 id="同时添加水印跟封面图片"><a href="#同时添加水印跟封面图片" class="headerlink" title="同时添加水印跟封面图片"></a><strong>同时添加水印跟封面图片</strong></h5><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs inform7">ffmpeg -hide_banner -i 222.mp4 -i F:\ffmpeg\sy.png -i F:\ffmpeg\cover.png -filter_complex <span class="hljs-comment">[1]</span>scale=200:200<span class="hljs-comment">[wm]</span>;<span class="hljs-comment">[0]</span><span class="hljs-comment">[wm]</span><span class="hljs-string">&quot;overlay=&#x27;main_w-overlay_w-10:main_h-overlay_h-10&#x27;:enable=&#x27;between(t,5,15)&#x27;<span class="hljs-subst">[wm]</span>&quot;</span> -map <span class="hljs-string">&quot;<span class="hljs-subst">[wm]</span>&quot;</span> -map 2 -c:v:1 -c:a:1 png -disposition:v:1 attached_pic 6616.mp4<br></code></pre></td></tr></table></figure><p>#以上代码合成后会没声音</p><h5 id="视频添加备注信息"><a href="#视频添加备注信息" class="headerlink" title="视频添加备注信息"></a><strong>视频添加备注信息</strong></h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">ffmpeg -i <span class="hljs-number">30</span>秒.mp4 -metadata <span class="hljs-keyword">comment</span>=&quot;关注微信公众号【海豚学长】获取更多最新影视资源&quot; -vcodec <span class="hljs-keyword">copy</span> -acodec <span class="hljs-keyword">copy</span> output.mp4 -y<br></code></pre></td></tr></table></figure><p>#添加视频的备注信息并保持原来的音视频质量输出</p><h5 id=""><a href="#" class="headerlink" title=""></a></h5><h5 id="录制屏幕"><a href="#录制屏幕" class="headerlink" title="录制屏幕"></a><strong>录制屏幕</strong></h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">ffmpeg <span class="hljs-operator">-f</span> gdigrab <span class="hljs-literal">-i</span> desktop <span class="hljs-operator">-f</span> dshow <span class="hljs-literal">-i</span> audio=<span class="hljs-string">&quot;virtual-audio-capturer&quot;</span> test.mp4<br></code></pre></td></tr></table></figure><p>#录制屏幕和系统声音，命令行输入q停止录制</p><h5 id="查看系统设备"><a href="#查看系统设备" class="headerlink" title="查看系统设备"></a><strong>查看系统设备</strong></h5><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ffmpeg</span> -list_devices <span class="hljs-literal">true</span> -f dshow -i dummy<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>代码相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>FFmpeg</tag>
      
      <tag>影音处理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>git 常用指令</title>
    <link href="/2023/09-01-gitzhiling.html"/>
    <url>/2023/09-01-gitzhiling.html</url>
    
    <content type="html"><![CDATA[<h3 id="git-常用指令"><a href="#git-常用指令" class="headerlink" title="git 常用指令"></a>git 常用指令</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs awk">BASH<br>git add . (暂存更改)<br>git commit -m <span class="hljs-string">&#x27;提交的内容&#x27;</span><br>git pull origin dev （拉远程dev分支）<br>git push （推送到远程）<br><span class="hljs-regexp">//</span> 新建分支<br>git branch xxx (xxx填写你的分支名称)<br><span class="hljs-regexp">//</span> 查看所有分支<br>git branch -a<br><span class="hljs-regexp">//</span> 切换到某一分支<br>git checkout xxx (xxx填写要切换的分支名称）<br><span class="hljs-regexp">//</span> 提交代码到指定分支<br>git push origin xxx （xxx为要提交代码的分支名称）<br><span class="hljs-regexp">//</span> 更新本地分支<br>git fetch<br><span class="hljs-regexp">//</span> 修改分支名<br>$ git branch -m xxx（xxx为修改后的分支名称）<br><span class="hljs-regexp">//</span> 修改分支名后推送分支<br>git push origin xxx(xxx为修改后的分支名称)<br></code></pre></td></tr></table></figure><h3 id="git-分支策略"><a href="#git-分支策略" class="headerlink" title="git 分支策略"></a>git 分支策略</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk">TXT<br><span class="hljs-regexp">/* 需求：git将当前分支的修改推到其他分支 */</span><br>git stash <span class="hljs-regexp">//</span> 把暂存区内的修改存储起来<br>git checkout 分支名 <span class="hljs-regexp">//</span> 切换到正确的分支：<br>git stash pop <span class="hljs-regexp">//</span> 将存储的修改取出来，继续进行提交等正常的操作<br></code></pre></td></tr></table></figure><h3 id="git-commit-提交规范"><a href="#git-commit-提交规范" class="headerlink" title="git commit 提交规范"></a>git commit 提交规范</h3><p>Git commit message规范指提交注释时的编写规范，统一方便维护，如下</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">TXT<br><span class="hljs-symbol">feat:</span>新功能<br><span class="hljs-symbol">fix:</span>修复一个bug<br><span class="hljs-symbol">docs:</span>只改了文档<br><span class="hljs-symbol">style:</span>修改不涉及代码的主要逻辑(如格式化了代码)<br><span class="hljs-symbol">refactor:</span>改动了代码，既不是新功能也不是修复bug<br><span class="hljs-symbol">perf:</span>优化了代码，提升了性能<br><span class="hljs-symbol">test:</span>增加或修改了代码测试<br><span class="hljs-symbol">build:</span>更改了构建流程相关的配置文件和包(如glup, npm)<br><span class="hljs-symbol">ci:</span>更改了CI配置文件或脚本等(如Travis, Circle, BrowserStack, SauceLabs)<br><span class="hljs-symbol">chore:</span>其它不涉及源代码和测试代码的修改<br><span class="hljs-symbol">revert:</span> git revert一次提交 <br></code></pre></td></tr></table></figure><h3 id="要配置-Git-的账号和邮箱，可以按照以下步骤进行操作："><a href="#要配置-Git-的账号和邮箱，可以按照以下步骤进行操作：" class="headerlink" title="要配置 Git 的账号和邮箱，可以按照以下步骤进行操作："></a>要配置 Git 的账号和邮箱，可以按照以下步骤进行操作：</h3><ol><li><p>打开终端或命令行工具，并导航到您的项目的根目录。</p></li><li><p>运行以下命令，将您的用户名配置为全局默认值：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">PLAINTEXT<br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;Your Name&quot;</span><br></code></pre></td></tr></table></figure><p>将 “Your Name” 替换为您希望显示的用户名。</p></li><li><p>运行以下命令，将您的邮箱地址配置为全局默认值：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">PLAINTEXT</span><br>git config --global user.email <span class="hljs-string">&quot;your.email<span class="hljs-variable">@example</span>.com&quot;</span><br></code></pre></td></tr></table></figure><p>将 “<a href="mailto:your.email@example.com">your.email@example.com</a>“ 替换为您的有效邮箱地址。</p></li></ol><p>配置完成后，每次提交代码时，Git 将会使用您所配置的用户名和邮箱信息作为提交记录的作者信息。</p><p>请注意，如果您希望仅为当前项目设置特定的用户名和邮箱，而不是全局默认值，可以省略 <code>--global</code> 参数，并在项目目录中运行相应的命令，而非在全局环境中执行。例如：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">PLAINTEXT<br>git config <span class="hljs-keyword">user</span>.name &quot;Your Name&quot;<br>git config <span class="hljs-keyword">user</span>.email &quot;your.email@example.com&quot;<br></code></pre></td></tr></table></figure><p>这样可以在当前项目中覆盖全局默认值。</p>]]></content>
    
    
    <categories>
      
      <category>代码相关</category>
      
    </categories>
    
    
    <tags>
      
      <tag>代码</tag>
      
      <tag>指令</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>目前可以免费AI绘画的6个宝藏级别的AI网站</title>
    <link href="/2023/09-01-zaixianaiwangzhan.html"/>
    <url>/2023/09-01-zaixianaiwangzhan.html</url>
    
    <content type="html"><![CDATA[<h3 id="目前可以在线免费AI绘画的6个宝藏级别的AI网站"><a href="#目前可以在线免费AI绘画的6个宝藏级别的AI网站" class="headerlink" title="目前可以在线免费AI绘画的6个宝藏级别的AI网站"></a><strong>目前可以在线免费AI绘画的6个宝藏级别的AI网站</strong></h3><hr><p>前两天给大家介绍了一款AI绘图工具fooocus，帮大家把AI绘画的使用门槛大幅度降低。</p><p>但是还是有一些朋友因为软件或者硬件的原因，无法使用上AI绘画工具。</p><p>那今天就再给大家分享<strong>6款AI绘画网站和工具，全都可以免费使用，完全不吃任何电脑配置</strong>。</p><p><strong>能联网就能用，彻底把AI绘画降到零门槛！</strong></p><h3 id="1、Vega-AI"><a href="#1、Vega-AI" class="headerlink" title="1、Vega AI"></a><strong>1、Vega AI</strong></h3><p><img src="https://s1.ax1x.com/2023/09/01/pP0Hrfe.png" alt="图片"></p><p>Vega AI可以看成是Stable Diffuison的中文简化版本，上手难度和使用门槛都大大降低。</p><p>网站里基本上融合了Stable Diffusion大部分的实用功能，比如文生图、图生图、条件生图和姿势生图等等功能操作。</p><p>里面也汇集了各种热门风格的图片及模型，让小白也能轻松生成高质量图片。</p><p><img src="https://cdn.jsdelivr.net/gh/bin862324915/blog-cdn@main/img/sc/001.png" alt="图片"></p><p>当然，最关键的还是目前使用完全免费，对于新手小白来说，足够玩到爽了！</p><p><strong>网站链接：</strong></p><p>手机端：</p><p><a href="https://rightbrain.art/phone/other/login?inviteCode=">https://rightbrain.art/phone/other/login?inviteCode=</a></p><p>网页端：</p><p><a href="https://rightbrain.art/?inviteCode=">https://rightbrain.art?inviteCode=</a></p><h3 id="2、Scribble-Diffusion"><a href="#2、Scribble-Diffusion" class="headerlink" title="2、Scribble Diffusion"></a><strong>2、Scribble Diffusion</strong></h3><p><img src="https://s1.ax1x.com/2023/09/01/pP0Hdw6.png" alt="图片"></p><p>Scribble Diffusion和其他AI绘画工具不同，是一款可以把手绘草图转化为高质量图像的AI绘图工具。</p><p>你只需要在草图框里随便勾勒几笔，然后再配上相应的描述词，就可以把手绘的简笔画或者涂鸦转化为具有艺术风格的照片或插画。</p><p>比如简单画一个苹果，然后在描述词框里输入苹果，就可以直接得到一张苹果的实物图片。</p><p><img src="https://s1.ax1x.com/2023/09/01/pP0H6ld.png" alt="图片"></p><p>这个工具尤其适合有创意，或者有一些美术功底的朋友，可以让你的创作效率飞一般提升。</p><p><strong>网站链接：</strong></p><p><a href="https://scribblediffusion.com/">https://scribblediffusion.com/</a></p><h3 id="3、Stable-Diffusion-Online"><a href="#3、Stable-Diffusion-Online" class="headerlink" title="3、Stable Diffusion Online"></a><strong>3、Stable Diffusion Online</strong></h3><p><img src="https://s1.ax1x.com/2023/09/01/pP0HBFO.png" alt="图片"></p><p>线上版的Stable Diffusion，完全不吃任何电脑配置，能联网就能用。</p><p>操作页面和原版的Stable Diffusion基本差不多，不过内置了几十款绘画模型，使用起来更方便快捷。</p><p>上手的门槛稍微高一点，需要了解一点Stable Diffusion的使用技巧，但是用的好的话出图的上限要比大多数在线网站都要高。</p><p><img src="https://s1.ax1x.com/2023/09/01/pP0HwTK.png" alt="图片"></p><p><strong>网站链接：</strong></p><p><a href="https://stablediffusionweb.com/">https://stablediffusionweb.com/</a></p><h3 id="4、Lexica"><a href="#4、Lexica" class="headerlink" title="4、Lexica"></a><strong>4、Lexica</strong></h3><p><img src="https://s1.ax1x.com/2023/09/01/pP0HDYD.png" alt="图片"></p><p>Lexica网页非常干净，进入网站之后可以看到搜索框和一堆图片列表。</p><p>这些图片全都是AI生成的，你可以直接在搜索框搜索你想找的图片，比如搜索猫“cat”，就可以看到各种风格的猫的AI图。</p><p><img src="https://s1.ax1x.com/2023/09/01/pP0HgOI.png" alt="图片"></p><p>点击图片还可以看到这张图片的详细生成信息供我们参考使用。</p><p>点击“Generate”就可以直接使用这个网站生成自己想要的图片。</p><p><strong>网站链接：</strong></p><p><a href="https://lexica.art/">https://lexica.art/</a></p><h3 id="5、Liblib-AI"><a href="#5、Liblib-AI" class="headerlink" title="5、Liblib AI"></a><strong>5、Liblib AI</strong></h3><p><img src="https://s1.ax1x.com/2023/09/01/pP0HySH.png" alt="图片"></p><p>之前的文章里就多次提到过这个网站，作为目前国内最大的AI绘画模型分享网站之一，这个网站是对于原版Stable Diffusion还原度最高的。</p><p>基本上保留了Stable Diffusion的全部核心功能，可操控性相较于其他AI绘画网站也是最高的。</p><p>并且网站里拥有数量庞大的AI绘画模型，这也是其他网站很难做到的。</p><p>每个账号每天100张图片生成额度，多准备几个号，对于大多数人来说，绝对是足够用了。</p><p><strong>网站链接：</strong></p><p><a href="https://www.liblibai.com/sd">https://www.liblibai.com/sd</a></p><h3 id="6、美图秀秀"><a href="#6、美图秀秀" class="headerlink" title="6、美图秀秀"></a><strong>6、美图秀秀</strong></h3><p><img src="https://s1.ax1x.com/2023/09/01/pP0Hc6A.jpg" alt="图片"></p><p>没错，就是那个大家最熟悉的P图工具。</p><p>美图秀秀已经把AI绘图功能嵌入到了自己的软件里，依旧保持着美图秀秀的一贯风格——傻瓜式操作。</p><p>没有什么上手难度和使用门槛，还直接融合了市面上最火的AI绘图玩法，比如文字融合，画质修复等等功能。</p><p>距离商用的话还比较远，但是日常玩玩绝对是首选！</p>]]></content>
    
    
    <categories>
      
      <category>AI绘画</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI绘画</tag>
      
      <tag>在线资源</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>免费畅玩AI绘图！fooocus（附安装包）</title>
    <link href="/2023/08-29-aihhfooocus.html"/>
    <url>/2023/08-29-aihhfooocus.html</url>
    
    <content type="html"><![CDATA[<h2 id="免费畅玩AI绘图！fooocus（附安装包）"><a href="#免费畅玩AI绘图！fooocus（附安装包）" class="headerlink" title="免费畅玩AI绘图！fooocus（附安装包）"></a><strong>免费畅玩AI绘图！fooocus（附安装包）</strong></h2><p>稍微了解过AI绘画的朋友应该都知道，AI绘画领域的两大王牌：</p><p><strong>Midjourney和Stable Diffusion</strong></p><p>目前市面上流行的99%的AI绘画工具都是在这两个工具的基础上衍生而来的。</p><p><img src="https://s1.ax1x.com/2023/08/29/pPayFTf.jpg" alt="图片"></p><p>虽说这两个工具至今为止还没有其他任何AI绘画工具能撼动它们的地位。</p><p>但对于大多数人来说，它们两个的缺点也是非常明显。</p><p>Midjourney价格太高，一个月30＄的价格就足够把一堆人挡在AI绘画的大门之外了；</p><p>Stable Diffusion倒是免费，但是对电脑配置的要求太高，大多数人也顶多只能体验体验，想要做出高质量的图就有点勉强了。</p><p>而今天给大家分享一款刚刚问世的新款AI绘画工具——<strong>fooocus</strong>。</p><p>（文末附安装包）</p><p>fooocus内置的是能够叫板Midjourney的最新AI绘画模型SDXL1.0。</p><p>除了能够生成高质量的图像之外，它的使用门槛也极大降低。</p><p><strong>4GB显存，8GB内存的配置即可流畅运行</strong>。</p><p><strong>出图的速度和质量相比于Stable Diffusion提升了一大截</strong>。</p><p>可以说fooocus是介于Midjourney和Stable Diffusion之间的一款新型AI绘画工具，极大程度上弥补了这两个工具的缺点。</p><p><strong>fooocus的初始操作页面很简单，一目了然：</strong></p><p><img src="https://s1.ax1x.com/2023/08/29/pPayPmt.png" alt="图片"></p><p>真是简洁得不能再简洁了。</p><p>在输入框简单输入描述词，点击生成即可生成高质量图像，注意目前还不支持中文描述词，需要用英文进行输入：</p><p><img src="https://s1.ax1x.com/2023/08/29/pPayn6s.png" alt="图片"></p><p>除了动物，fooocus对于人物的刻画也更加的细致逼真：</p><p><img src="https://s1.ax1x.com/2023/08/29/pPayVfg.png" alt="图片"></p><p>这还只是fooocus的简单操作页面，<strong>点击页面左下角的“Advanced”就可以进入进阶版操作页面</strong>：</p><p><img src="https://s1.ax1x.com/2023/08/29/pPayEtS.png" alt="图片"></p><p>在这里你可以在页面右侧工具栏设置各种参数。</p><p>比如选择生成图片的模式，分辨率、反向提示词、seed值等等，来控制图片的生成方向。</p><p>点击右侧工具栏中的“Style”标签，可以看到有几十种图片的生成风格可供我们选择：</p><p><img src="https://s1.ax1x.com/2023/08/29/pPayi0P.png" alt="图片"></p><p>看不懂没关系，使用浏览器的自动翻译功能翻译一下，大致就能明白每个风格可以生成什么样的图片了：</p><p><img src="https://s1.ax1x.com/2023/08/29/pPaymlj.png" alt="图片"></p><p>工具栏最右侧的“Advanced ”标签和Stable Diffusion的操作大差不差。</p><p>用来控制生成图片的大模型和Lora模型及权重，<strong>一般情况下保持默认其实就可以了</strong>。</p><p><img src="https://s1.ax1x.com/2023/08/29/pPayAk8.png" alt="图片"></p><p>除了操作使用便捷，fooocus的安装也非常简单。</p><p>不像Stable Diffusion那样需要部署各种环境，也不需要像Midjourney对网络要求那么严格</p><p><strong>安装包链接：</strong></p><p>123盘 <a href="https://www.123pan.com/s/BZouVv-dynF3.html">https://www.123pan.com/s/BZouVv-dynF3.html</a></p><p>度盘 <a href="https://pan.baidu.com/s/1c6KWv2-4lZmtkARcnZX0-g?pwd=28b3">https://pan.baidu.com/s/1c6KWv2-4lZmtkARcnZX0-g?pwd=28b3</a></p><p>开源地址 <a href="https://github.com/lllyasviel/Fooocus">https://github.com/lllyasviel/Fooocus</a></p><p>下载好之后解压到对应目录，然后双击“run.bat”运行：</p><p><img src="https://s1.ax1x.com/2023/08/29/pPayepQ.jpg" alt="图片"></p><p>浏览器就会自动弹出操作页面，如果没有弹出，在浏览器中手动输入地址：</p><p><strong><a href="http://127.0.0.1:7860/">http://127.0.0.1:7860/</a></strong></p><p>即可打开操作页面进行AI绘图。</p>]]></content>
    
    
    <categories>
      
      <category>AI绘画</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AI绘画</tag>
      
      <tag>Win资源</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2023/08-25-test.html"/>
    <url>/2023/08-25-test.html</url>
    
    <content type="html"><![CDATA[<div class="container" aos-init aos-animate" data-aos="fade-right"><p>这是一篇测试文章！<br>111111</p><p><img src="https://s1.ax1x.com/2023/08/29/pPayXBq.jpg" alt="图片引用"></p></div><div class="container" data-aos="fade-left" data-aos-delay="900">便签<p class="note note-primary">标签</p><p class="note note-success">标签</p><p class="note note-warning">标签</p><p class="note note-info">标签</p></div><div class="container" data-aos="fade-right" data-aos-delay="900">行内标签<span class="label label-primary">Label</span><span class="label label-success">Label</span></div><div class="container" data-aos="flip-down" data-aos-delay="900">    <h1>Welcome to AOS Example</h1>    <p>This is a demo of the AOS library.</p></div><div class="container" data-aos="fade-left" data-aos-delay="900">    <h2>AOS Animation Demo</h2>    <p>Scroll down to see the animations in action!</p></div><div class="container" aos-init aos-animate" data-aos="fade-right">    <h3>Animate on Scroll</h3>    <p>This library allows you to easily add cool parallax effects to your website.</p></div>　动画和锚位置淡入淡出动画：fade-up<p>fade-down</p><p>fade-left</p><p>fade-right</p><p>fade-up-right</p><p>fade-up-left</p><p>fade-down-right</p><p>fade-down-left</p><p>翻转动画：<br>flip-up</p><p>flip-down</p><p>flip-left</p><p>flip-right</p><p>滑动动画：<br>slide-up</p><p>slide-down</p><p>slide-left</p><p>slide-right</p><p>缩放动画：<br>zoom-in</p><p>zoom-in-up</p><p>zoom-in-down</p><p>zoom-in-left</p><p>zoom-in-right</p><p>zoom-out</p><p>zoom-out-up</p><p>zoom-out-down</p><p>zoom-out-left</p><p>zoom-out-right</p><p>锚位置<br>top-bottom</p><p>top-center</p><p>top-top</p><p>center-bottom</p><p>center-center</p><p>center-top</p><p>bottom-bottom</p><p>bottom-center</p><p>bottom-top</p><p>easing动画<br>你可以使用以下的一些easing动画效果：</p><p>linear</p><p>ease</p><p>ease-in</p><p>ease-out</p><p>ease-in-out</p><p>ease-in-back</p><p>ease-out-back</p><p>ease-in-out-back</p><p>ease-in-sine</p><p>ease-out-sine</p><p>ease-in-out-sine</p><p>ease-in-quad</p><p>ease-out-quad</p><p>ease-in-out-quad</p><p>ease-in-cubic</p><p>ease-out-cubic</p><p>ease-in-out-cubic</p><p>ease-in-quart</p><p>ease-out-quart</p><p>ease-in-out-quart</p><p>按钮<br><a class="btn" href="javascript:" title="title">text</a></p>]]></content>
    
    
    <categories>
      
      <category>test</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/08-25-hello-world.html"/>
    <url>/2023/08-25-hello-world.html</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
